Scenario
--------

Current suggestions:
- The path is close
- No branches in the path
- Two colors (background, and the path color)

// The user will click on a point (should be on the path)
  // Get the Hex color with most occurrence [1]
  // Check the surroding 8 points, and get the two points with the highest %
  // Go to the next point:
    // If this the first move:
      // Choose the point with the highest % or any point if there are equal
    // Else:
      // Match the (x, y) directions with last move and the points
      // Choose the point that most matches the directions
  // Go to [1] and repeat


Methods
-------

- rgbToHex: returns #hex value
- getCenterPointData: returns {hexColor, score, xDir, yDir}
- getPointsData: sorted list of {hexColor, score, xPos, yPos}
- moveToPoint: ...s
